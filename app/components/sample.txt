  // Handle File input
  const handleFiles = (files: FileList) => {
    const newFiles = Array.from(files);
    setImages((prev) => [...prev, ...newFiles]);
  };

  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {
    e.preventDefault();
    setIsDragging(false);
    if (e.dataTransfer.files) handleFiles(e.dataTransfer.files);
  };

  const removeImage = (index: number) => {
    setImages((prev) => prev.filter((_, i) => i !== index));
  };




 {/* ðŸ”¹ Drag & Drop Upload */}
      <div
        onDragOver={(e) => {
          e.preventDefault();
          setIsDragging(true);
        }}
        onDragLeave={() => setIsDragging(false)}
        onDrop={handleDrop}
        className={`border-2 border-dashed rounded-md p-4 text-center transition-all cursor-pointer ${
          isDragging
            ? "border-pink bg-pink/10"
            : "border-pink/40 bg-black/40 hover:bg-black/60"
        }`}
      >
        <input
          type="file"
          multiple
          accept="image/*"
          onChange={(e) => e.target.files && handleFiles(e.target.files)}
          className="hidden"
          id="imageUpload"
          disabled={isSubmitting}
        />
        <label htmlFor="imageUpload" className="cursor-pointer flex flex-col items-center">
          <ImageIcon className="w-6 h-6 text-pink mb-2" />
          <p className="text-sm text-gray-300">
            Drag & drop images here or <span className="text-pink">browse</span>
          </p>
        </label>

        {/* Preview Thumbnails */}
        {images.length > 0 && (
          <div className="mt-3 flex flex-wrap justify-center gap-3">
            {images.map((file, index) => (
              <div
                key={index}
                className="relative group w-20 h-20 border border-pink/30 rounded-md overflow-hidden"
              >
                <img
                  src={URL.createObjectURL(file)}
                  alt={`preview-${index}`}
                  className="w-full h-full object-cover"
                />
                <button
                  type="button"
                  onClick={() => removeImage(index)}
                  className="absolute top-1 right-1 bg-black/70 rounded-full p-1 opacity-0 group-hover:opacity-100 transition"
                >
                  <X size={12} className="text-pink" />
                </button>
              </div>
            ))}
          </div>
        )}
      </div>